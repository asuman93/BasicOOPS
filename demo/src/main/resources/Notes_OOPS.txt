class keyboard {
	int noOfbutton;
	String type;  //soft/hard
	String connection;  //wired/bluetooth
	
	setConnection() {			//method
	
	}
}

Object of class
keyboard1 -> of type keyboard
	noOfbutton = 5;
	type = hard;
	connection = wired;


keyboard2 -> of type keyboard
	noOfbutton = 10;
	type = soft;
	connection = bluetooth;



Access Modifier:
Photo
private->default->protected->public


DataType:
String -> 'suman', 'hello'
int -> 2,4,10
Long -> 36534657890L
Double -> 5468.67
Char -> 'c', 'a'
boolean -> true/false

Date -> 02-04-2024
DateTime -> 02-04-2025T01:29:27.685Z


KeyWord:
this : to acces same class data members/methods
super : to acces parent class data members/methods

How to call any class method:
<Reference variable(which is pointing to class object)>.<method name>

Pillar:
Encapsulation:
	encapsulate all properties in single unit. ex: class
Abstraction:
	show only relevant info to outer world. implement using abstract class or interface
	abstract class: 0-100%
	    may have abstaract method or concrete method
	Interface: 100%
	    must have abstract method as concrete methiod is not allowed

Inheritance:
	parent class -> child class/sub class
	parent class is also knownn base class and child class is also known as derived class
	Inheritance -> is-a relation
	Person e1 = new Employee();    -> we can create reference variable of parent class type and point it to chikld object BUT vice versa is not allowed
	
	child/sub inherit the properties(variable/data memebrs and method but depend on access modifier) of parent class
	extend is a keyword, which is usd to inherit the properties or features or methods os parent class
	Inheritance type:
		Single inheritance -> PC:1 and CC:1 	:::  PC->CC
		Multi-Level inheritance -> PC:multiple and CC:multiple 	:::  PC1->PC2->PC3->CC
		Multiple inheritance -> not supported in classes because of ambiguity 				::: PC1,PC2->CC
		Hierarchical Inheritance -> PC:1 and CC:multiple
Polymorphism:
	Method Overloading: same class and two methods
		Static binding: compile time decide->which method gets call
	Method Overriding: parent child class and same method
		Dynamic binding: run time decide->which method gets call


Constructor:
it is used to create the object of class.
Animal obj1 = new Animal();
<Class Type> <Reference Variable> = <New Keyword> <ClassName/Type>(<Inpurt argument in case of parameterized constructor>);


Method:
<Access Modifier> <Return Type> <Method Name>(<Input Argument/Parameter>) {
	<Method Body>
}

public int sum(int a, int b) {
	return a+b;
}


Super Class:
Object -> This is super class... All classs inherit this class by default.
toString -> to print properties of object

To compare two objects
equals -> check values
hashcode -> check hashcode -> create hashcode(int type) using hashing mechanishm
	if two object has same hashcode, then it is not compulsory that two object is same.
	if two object are equal, then it means both have same hashcode and both object are same.
	
equals -> this will compare two object value
== -> this will compare two objects 

String:
Immutable -> cannot be modified after creation
create way:
	
	String b = new String("abc");   //Two Object -> one in String Pool and one in heap
	String a = "abc";		//zero Object -> point same object in heap created early
	String c = "abcd";			//One Object -> one in heap


static:
    it is like constant
    it is linked with class and shared with all onjects
    it can be set :
        1. while declaration
            private static String department="CS";
        2. static block:
            static {
                    department = "CS";
                }
        3. static method:
            create any method of static type and define under that

    first constructor gets invoked under which first static body will gets executed and tghen constructor body witll get executed
    first constructor gets invoked under which first static body will gets executed(parent first then child) and tghen constructor body witll get executed
